import discord
from discord import app_commands
import os
from dotenv import load_dotenv
import datetime
import sqlite3
from discord.utils import get

intents = discord.Intents.default()
intents.message_content = True
bot = discord.Client(intents=intents)
tree = app_commands.CommandTree(bot)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
def init_db():
    conn = sqlite3.connect('game_stats.db')
    c = conn.cursor()
    
    c.execute('''CREATE TABLE IF NOT EXISTS stats
               (guild_id INTEGER PRIMARY KEY,
                wins INTEGER DEFAULT 0,
                losses INTEGER DEFAULT 0,
                territories INTEGER DEFAULT 0)''')
    
    c.execute('''CREATE TABLE IF NOT EXISTS history
               (id INTEGER PRIMARY KEY AUTOINCREMENT,
                guild_id INTEGER NOT NULL,
                user_id INTEGER NOT NULL,
                action_type TEXT NOT NULL,
                timestamp TEXT NOT NULL,
                screenshot_url TEXT NOT NULL,
                territories INTEGER NOT NULL,
                note TEXT)''')
    
    c.execute('''CREATE TABLE IF NOT EXISTS bot_settings
               (guild_id INTEGER PRIMARY KEY,
                stats_channel_id INTEGER,
                allowed_role_id INTEGER)''')
    
    conn.commit()
    conn.close()

init_db()

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω!')
    try:
        await tree.sync()
        print("–°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
async def has_permission(interaction):
    conn = sqlite3.connect('game_stats.db')
    c = conn.cursor()
    c.execute('''SELECT allowed_role_id FROM bot_settings WHERE guild_id = ?''', (interaction.guild.id,))
    role_id = c.fetchone()
    conn.close()
    
    if not role_id or not role_id[0]:
        return True  # –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ–º
    
    role = get(interaction.guild.roles, id=role_id[0])
    if role in interaction.user.roles:
        return True
    
    await interaction.response.send_message(
        "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!",
        ephemeral=True
    )
    return False

@tree.command(name="rate", description="–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
async def rate(interaction: discord.Interaction):
    conn = sqlite3.connect('game_stats.db')
    c = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    c.execute('''SELECT wins, losses, territories FROM stats WHERE guild_id = ?''', (interaction.guild.id,))
    stats_data = c.fetchone()
    
    if not stats_data:
        embed = discord.Embed(
            title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
            description="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã /att_win –∏–ª–∏ /def_loose —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
            color=discord.Color.light_grey()
        )
        await interaction.response.send_message(embed=embed)
        return
    
    wins, losses, territories = stats_data
    total_games = wins + losses
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
    c.execute('''SELECT action_type, timestamp FROM history 
                WHERE guild_id = ? 
                ORDER BY timestamp DESC LIMIT 5''', (interaction.guild.id,))
    history = c.fetchall()
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã
    win_rate = (wins / total_games * 100) if total_games > 0 else 0
    loss_rate = (losses / total_games * 100) if total_games > 0 else 0
    
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    bar_length = 10
    win_bar = 'üü©' * round(win_rate / 100 * bar_length)
    loss_bar = 'üü•' * round(loss_rate / 100 * bar_length)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º Embed
    embed = discord.Embed(
        title=f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ï–†–í–ï–†–ê {interaction.guild.name}",
        color=discord.Color.gold()
    )
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
    embed.add_field(
        name="üè∞ –¢–û–ß–ï–ö", 
        value=f"```{territories}/18```", 
        inline=False
    )
    
    # –ì—Ä–∞—Ñ–∏–∫ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è
    embed.add_field(
        name=f"üìà –°–û–û–¢–ù–û–®–ï–ù–ò–ï [{win_rate:.1f}%]",
        value=f"{win_bar}{loss_bar}\n"
              f"‚úÖ {wins} –ø–æ–±–µ–¥ | ‚ùå {losses} –ø–æ—Ä–∞–∂–µ–Ω–∏–π",
        inline=False
    )
    
    # –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π (—Å –≤—Ä–µ–º–µ–Ω–µ–º –≤–º–µ—Å—Ç–æ –¥–∞—Ç—ã)
    if history:
        history_str = ""
        for action, timestamp in history:
            action_emoji = "üü¢" if "win" in action else "üî¥"
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º timestamp –≤ –æ–±—ä–µ–∫—Ç datetime
            event_time = datetime.datetime.strptime(timestamp, "%Y-%m-%d %H:%M:%S")
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è (—á–∞—Å—ã:–º–∏–Ω—É—Ç—ã)
            time_str = event_time.strftime("%H:%M")
            history_str += f"{action_emoji} {time_str} - {action.replace('_', ' ').title()}\n"
        
        embed.add_field(
            name="‚è≥ –ü–û–°–õ–ï–î–ù–ò–ï –°–û–ë–´–¢–ò–Ø",
            value=history_str,
            inline=False
        )
    
    # –î–∏–Ω–∞–º–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –±—ã–ª–æ)
    if len(history) > 1:
        last_change = int(history[0][1][8:10]) - int(history[1][1][8:10])
        trend = "‚Üë" if last_change >=0 else "‚Üì"
        embed.add_field(
            name="üìä –î–ò–ù–ê–ú–ò–ö–ê",
            value=f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {trend} {abs(last_change)} —Ç–æ—á–µ–∫",
            inline=True
        )
    
    embed.set_footer(text=f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.datetime.now().strftime('%d.%m.%Y %H:%M')}")
    
    await interaction.response.send_message(embed=embed)
    conn.close()

# –ö–æ–º–∞–Ω–¥–∞ /addrole
@tree.command(name="addrole", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º")
@app_commands.describe(role="–†–æ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∏—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–∞–º")
async def addrole(interaction: discord.Interaction, role: discord.Role):
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message(
            "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!",
            ephemeral=True
        )
        return
    
    conn = sqlite3.connect('game_stats.db')
    c = conn.cursor()
    c.execute('''INSERT OR REPLACE INTO bot_settings 
                (guild_id, allowed_role_id) VALUES (?, ?)''',
              (interaction.guild.id, role.id))
    conn.commit()
    conn.close()
    
    await interaction.response.send_message(
        f"‚úÖ –†–æ–ª—å {role.mention} —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞!",
        ephemeral=True
    )
@tree.command(name="current", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π")
@app_commands.describe(
    territories="–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π",
    note="–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
)
async def current(interaction: discord.Interaction, territories: int, note: str = None):
    if not await has_permission(interaction):
        return
    
    await interaction.response.defer()
    
    conn = sqlite3.connect('game_stats.db')
    c = conn.cursor()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    c.execute('''INSERT OR REPLACE INTO stats (guild_id, territories) VALUES (?, ?)''',
             (interaction.guild.id, territories))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    c.execute('''INSERT INTO history 
                (guild_id, user_id, action_type, timestamp, screenshot_url, territories, note)
                VALUES (?, ?, ?, ?, ?, ?, ?)''',
             (interaction.guild.id, interaction.user.id, "manual_update", 
              timestamp, "", territories, note))
    
    conn.commit()
    conn.close()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    embed = discord.Embed(
        title="‚úÖ –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
        description=f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ: **{territories}**",
        color=discord.Color.blue()
    )
    if note:
        embed.add_field(name="–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ", value=note, inline=False)
    embed.set_footer(text=f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {interaction.user.display_name}")
    
    await interaction.followup.send(embed=embed)
# –ö–æ–º–∞–Ω–¥–∞ /addchannel
@tree.command(name="addchannel", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
@app_commands.describe(channel="–ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
async def addchannel(interaction: discord.Interaction, channel: discord.TextChannel):
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message(
            "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!",
            ephemeral=True
        )
        return
    
    conn = sqlite3.connect('game_stats.db')
    c = conn.cursor()
    c.execute('''INSERT OR REPLACE INTO bot_settings 
                (guild_id, stats_channel_id) VALUES (?, ?)''',
              (interaction.guild.id, channel.id))
    conn.commit()
    conn.close()
    
    await interaction.response.send_message(
        f"‚úÖ –ö–∞–Ω–∞–ª {channel.mention} —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!",
        ephemeral=True
    )

# ... (–ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∏–º–ø–æ—Ä—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

# –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∞—Ç–∞–∫–∏
@tree.command(name="att_win", description="–ü–æ–±–µ–¥–∞ –≤ –∞—Ç–∞–∫–µ (+1 —Ç–æ—á–∫–∞)")
@app_commands.describe(
    screenshot="–°–∫—Ä–∏–Ω—à–æ—Ç —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º",
    note="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
)
async def att_win(interaction: discord.Interaction, screenshot: discord.Attachment, note: str = None):
    await process_win(interaction, screenshot, note, attack=True)

@tree.command(name="att_loose", description="–ü–æ—Ä–∞–∂–µ–Ω–∏–µ –≤ –∞—Ç–∞–∫–µ (—Ç–æ—á–∫–∏ –Ω–µ –º–µ–Ω—è—é—Ç—Å—è)")
@app_commands.describe(
    screenshot="–°–∫—Ä–∏–Ω—à–æ—Ç —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º",
    note="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
)
async def att_loose(interaction: discord.Interaction, screenshot: discord.Attachment, note: str = None):
    await process_loose(interaction, screenshot, note, attack=True)

# –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞—â–∏—Ç—ã
@tree.command(name="def_win", description="–ü–æ–±–µ–¥–∞ –≤ –∑–∞—â–∏—Ç–µ (—Ç–æ—á–∫–∏ –Ω–µ –º–µ–Ω—è—é—Ç—Å—è)")
@app_commands.describe(
    screenshot="–°–∫—Ä–∏–Ω—à–æ—Ç —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º",
    note="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
)
async def def_win(interaction: discord.Interaction, screenshot: discord.Attachment, note: str = None):
    await process_win(interaction, screenshot, note, attack=False)

@tree.command(name="def_loose", description="–ü–æ—Ä–∞–∂–µ–Ω–∏–µ –≤ –∑–∞—â–∏—Ç–µ (-1 —Ç–æ—á–∫–∞)")
@app_commands.describe(
    screenshot="–°–∫—Ä–∏–Ω—à–æ—Ç —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º",
    note="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
)
async def def_loose(interaction: discord.Interaction, screenshot: discord.Attachment, note: str = None):
    await process_loose(interaction, screenshot, note, attack=False)

# –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
async def process_win(interaction: discord.Interaction, screenshot: discord.Attachment, note: str, attack: bool):
    if not await has_permission(interaction):
        return
    
    if not screenshot.filename.lower().endswith(('.png', '.jpg', '.jpeg')):
        await interaction.response.send_message("‚ùå –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG/JPG/JPEG!", ephemeral=True)
        return

    await interaction.response.defer()
    
    conn = sqlite3.connect('game_stats.db')
    c = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
    c.execute('''INSERT OR IGNORE INTO stats (guild_id) VALUES (?)''', (interaction.guild.id,))
    c.execute('''SELECT territories FROM stats WHERE guild_id = ?''', (interaction.guild.id,))
    current_territories = c.fetchone()[0]
    
    # –î–ª—è –∞—Ç–∞–∫–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ (–º–∞–∫—Å 18)
    if attack:
        new_territories = min(current_territories + 1, 18)
        action_type = "att_win"
    else:
        new_territories = current_territories
        action_type = "def_win"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    c.execute('''UPDATE stats SET 
                wins = wins + 1,
                territories = ?
                WHERE guild_id = ?''',
             (new_territories, interaction.guild.id))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    c.execute('''INSERT INTO history 
                (guild_id, user_id, action_type, timestamp, screenshot_url, territories, note)
                VALUES (?, ?, ?, ?, ?, ?, ?)''',
             (interaction.guild.id, interaction.user.id, action_type, 
              timestamp, screenshot.url, new_territories, note))
    
    conn.commit()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    await send_to_stats_channel(
        interaction=interaction,
        conn=conn,
        title="üü¢ –ü–æ–±–µ–¥–∞ –≤ –∞—Ç–∞–∫–µ!" if attack else "üü¢ –ü–æ–±–µ–¥–∞ –≤ –∑–∞—â–∏—Ç–µ!",
        color=discord.Color.green(),
        territories=new_territories,
        note=note,
        screenshot_url=screenshot.url,
        emoji="üòé"
    )
    
    conn.close()
    await interaction.followup.send(
        f"‚úÖ {'–ê—Ç–∞–∫—É—é—â–∞—è' if attack else '–ó–∞—â–∏—Ç–Ω–∞—è'} –ø–æ–±–µ–¥–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞! –¢–æ—á–∫–∏: {new_territories}",
        ephemeral=True
    )

async def process_loose(interaction: discord.Interaction, screenshot: discord.Attachment, note: str, attack: bool):
    if not await has_permission(interaction):
        return
    
    if not screenshot.filename.lower().endswith(('.png', '.jpg', '.jpeg')):
        await interaction.response.send_message("‚ùå –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG/JPG/JPEG!", ephemeral=True)
        return

    await interaction.response.defer()
    
    conn = sqlite3.connect('game_stats.db')
    c = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
    c.execute('''INSERT OR IGNORE INTO stats (guild_id) VALUES (?)''', (interaction.guild.id,))
    c.execute('''SELECT territories FROM stats WHERE guild_id = ?''', (interaction.guild.id,))
    current_territories = c.fetchone()[0]
    
    # –î–ª—è –∑–∞—â–∏—Ç—ã —É–º–µ–Ω—å—à–∞–µ–º —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ (–º–∏–Ω 0)
    if not attack:
        new_territories = max(current_territories - 1, 0)
        action_type = "def_loose"
    else:
        new_territories = current_territories
        action_type = "att_loose"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    c.execute('''UPDATE stats SET 
                losses = losses + 1,
                territories = ?
                WHERE guild_id = ?''',
             (new_territories, interaction.guild.id))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    c.execute('''INSERT INTO history 
                (guild_id, user_id, action_type, timestamp, screenshot_url, territories, note)
                VALUES (?, ?, ?, ?, ?, ?, ?)''',
             (interaction.guild.id, interaction.user.id, action_type, 
              timestamp, screenshot.url, new_territories, note))
    
    conn.commit()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    await send_to_stats_channel(
        interaction=interaction,
        conn=conn,
        title="üî¥ –ü–æ—Ä–∞–∂–µ–Ω–∏–µ –≤ –∞—Ç–∞–∫–µ!" if attack else "üî¥ –ü–æ—Ä–∞–∂–µ–Ω–∏–µ –≤ –∑–∞—â–∏—Ç–µ!",
        color=discord.Color.red(),
        territories=new_territories,
        note=note,
        screenshot_url=screenshot.url,
        emoji="üò≠"
    )
    
    conn.close()
    await interaction.followup.send(
        f"‚ö†Ô∏è {'–ê—Ç–∞–∫—É—é—â–µ–µ' if attack else '–ó–∞—â–∏—Ç–Ω–æ–µ'} –ø–æ—Ä–∞–∂–µ–Ω–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ! –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏: {new_territories}",
        ephemeral=True
    )

async def send_to_stats_channel(interaction, conn, title, color, territories, note, screenshot_url, emoji):
    c = conn.cursor()
    c.execute('SELECT stats_channel_id FROM bot_settings WHERE guild_id = ?', (interaction.guild.id,))
    channel_id = c.fetchone()
    
    if channel_id and channel_id[0]:
        channel = bot.get_channel(channel_id[0])
        if channel:
            embed = discord.Embed(
                title=title,
                description=f"–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.mention}",
                color=color,
                timestamp=datetime.datetime.now()
            )
            embed.add_field(name="–¢–µ–∫—É—â–∏–µ —Ç–æ—á–∫–∏", value=str(territories))
            if note:
                embed.add_field(name="–ó–∞–º–µ—Ç–∫–∞", value=note, inline=False)
            embed.set_image(url=screenshot_url)
            message = await channel.send(embed=embed)
            await message.add_reaction(emoji)

# ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

load_dotenv()
bot.run(os.getenv("DISCORD_TOKEN")))

